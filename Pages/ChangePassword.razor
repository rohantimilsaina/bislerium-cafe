@page "/change-password"

@inject UserServices UserServices

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-lg-6 col-md-8 col-sm-10">
            <div class="card shadow">
                <div class="card-body">
                    @if (!string.IsNullOrEmpty(_errorMessage))
                    {
                        <MudAlert Severity="Severity.Error" Class="mb-3">@_errorMessage</MudAlert>
                    }
                    else if (!string.IsNullOrEmpty(_sucessMessage))
                    {
                        <MudAlert Severity="Severity.Success" Class="mb-3">@_sucessMessage</MudAlert>
                    }

                    <form>
                        <div class="mb-3">
                            <h2 class="text-center mb-4">Change Password</h2>
                            <MudTextField @bind-Value="_currentPassword" Id="currentPassword" Variant="Variant.Outlined" InputType="@InputType.Password" Placeholder="Current Password" Required="true"></MudTextField>
                        </div>

                        <div class="mb-3">
                            <MudTextField @bind-Value="_newPassword" Id="newPassword" Variant="Variant.Outlined" InputType="@InputType.Password" Placeholder="New Password" Required="true"></MudTextField>
                        </div>

                        <div class="d-grid gap-2">
                            <MudButton Variant="Variant.Filled" DisableElevation="true" Color="Color.Primary" @onclick="_changePasswordHandler">
                                Change Password
                            </MudButton>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .card {
        border: none;
    }

    .card-body {
        padding: 30px;
    }

    .mb-3 {
        margin-bottom: 1.5rem;
    }

    .text-center {
        text-align: center;
    }
</style>

@code {
    [CascadingParameter]
    private GlobalState _globalState { get; set; }

    protected override void OnInitialized()
    {
        _globalState.AppBarTitle = "Change Password";
    }

    private string _newPassword { set; get; }
    private string _currentPassword { set; get; }

    private string _errorMessage { set; get; } = "";
    private string _sucessMessage { set; get; } = "";

    private void _changePasswordHandler()
    {
        try
        {
            if (string.IsNullOrEmpty(_currentPassword) || string.IsNullOrEmpty(_newPassword))
            {
                _errorMessage = "All fields are required. Please enter all details!!!";
                return;
            }

            if (_currentPassword == _newPassword)
            {
                _errorMessage = "New password must be different from the current password.";
                return;
            }

            _globalState.CurrentUser = UserServices.ChangePassword(_globalState.CurrentUser, _newPassword, _currentPassword);

            _sucessMessage = "Password is changed successfully";

            _errorMessage = "";

            _newPassword = "";
            _currentPassword = "";
        }
        catch (Exception e)
        {
            _errorMessage = e.Message;
        }
    }
}
